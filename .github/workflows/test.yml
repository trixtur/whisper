name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.2'

    - name: Install PortAudio (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y portaudio19-dev

    - name: Install PortAudio (macOS)
      if: runner.os == 'macOS'
      run: brew install portaudio

    - name: Install PortAudio (Windows)
      if: runner.os == 'Windows'
      run: |
        C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm mingw-w64-x86_64-portaudio mingw-w64-x86_64-gcc mingw-w64-x86_64-pkg-config"
        echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install dependencies
      run: go mod download

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest

    - name: Run tests
      run: go test -v ./...

    - name: Run tests with coverage (Unix)
      if: runner.os != 'Windows'
      run: go test -coverprofile=coverage.out ./...

    - name: Run tests with coverage (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: go test -coverprofile=coverage.out ./...

    - name: Display coverage (Unix)
      if: runner.os != 'Windows'
      run: go tool cover -func=coverage.out

    - name: Display coverage (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: go tool cover -func=coverage.out
